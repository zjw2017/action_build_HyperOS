name: Xiaomi HyperOS - kona
on:
  workflow_dispatch:
    inputs:
      build_matrix:
        description: "构建阵列，以英文逗号分隔，预置all,865和870"
        type: string
        default: "all"
        required: true
      URL:
        description: "移植包的下载地址"
        required: true
        type: string
      custom_version:
        description: "自定义版本号"
        required: true
        type: string
      VK:
        description: "Voyager Kernel"
        required: true
        type: boolean
        default: true
      Dolby:
        description: "杜比全景声"
        required: true
        type: boolean
        default: false
      NFC_Version:
        description: "NFC版本"
        required: true
        default: "2"
        type: choice
        options:
          - "1"
          - "2"
      data:
        description: "去除data加密"
        required: true
        type: boolean
        default: false
      pack_type:
        description: "待打包的系统分区格式和上传方式"
        required: true
        default: "erofs"
        type: choice
        options:
          - erofs
          - ext4
      OneDrive:
        description: "OneDrive"
        required: true
        type: boolean
        default: true
      GithubRelease:
        description: "Github Release"
        required: true
        type: boolean
        default: false
jobs:
  build_matrix:
    name: 设置构建阵列
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: 设置构建阵列
        id: set-matrix
        run: |
          input_var="${{ github.event.inputs.build_matrix }}"
          if [ "$input_var" = "865" ]; then
            input_var="umi,cmi,cas,apollo"
          elif [ "$input_var" = "870" ]; then
            input_var="thyme,alioth"
          elif [ "$input_var" = "all" ]; then
            input_var="umi,cmi,cas,apollo,thyme,alioth"
          fi
          IFS=',' read -ra devices <<< "$input_var"
          json_output="{\"list\":["
          for device in "${devices[@]}"; do
            json_output+="{\"device\":\"$device\"},"
          done
          json_output=${json_output%,}
          json_output+="]}"
          echo "matrix=$json_output" >> $GITHUB_OUTPUT
  removeRelease:
    if: github.event.inputs.GithubRelease == 'true'
    name: 删除 ${{ inputs.custom_version }} 的 Github Release
    runs-on: ubuntu-latest
    steps:
      - name: 删除 ${{ inputs.custom_version }} 的 Github Release
        uses: ncipollo/release-action@main
        with:
          owner: Weverses
          repo: ActionBuildCasSystemT
          name: "${{ inputs.custom_version }}"
          tag: "${{ inputs.custom_version }}"
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
  build:
    name: 自动构建
    runs-on: ubuntu-latest
    needs: build_matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build_matrix.outputs.matrix) }}
    steps:
      - name: 精简无用组件
        run: |
          docker rmi `docker images -q` || true
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d || true
          sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* || true
          sudo apt -y autoremove --purge || true
          sudo apt -y autoclean || true
          sudo apt clean || true
      - name: 最大化并挂载构建空间
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 1024
          swap-size-mb: 6144
          remove-dotnet: "true"
          temp-reserve-mb: 1024
          remove-android: "true"
          remove-haskell: "true"
      - name: 检出仓库文件
        uses: actions/checkout@v4.1.1
        with:
          repository: Weverses/ActionBuildCasSystemT
          ref: OS2
          token: ${{ secrets.GH_TOKEN }}
      - name: 发送开始构建通知
        run: |
          device=$(echo "$MATRIX_CONTEXT" | jq -r '.list.device')
          echo "device=$device" >> "$GITHUB_ENV"
          echo "date=$date" >> "$GITHUB_ENV"
          if [[ "$device" == "umi" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10 '"$date"'开始构建","content":" **小米10 '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "cmi" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10Pro '"$date"'开始构建","content":" **小米10Pro '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "cas" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10 Ultra '"$date"'开始构建","content":" **小米10 Ultra '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "apollo" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"红米K30S Ultra '"$date"'开始构建","content":" **红米K30S Ultra '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "thyme" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10S '"$date"'开始构建","content":" **小米10S '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "alioth" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"红米K40 '"$date"'开始构建","content":" **红米K40 '"$date"'开始构建** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          fi
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
          date: ${{ inputs.custom_version }}
      - name: 下载系统包
        run: |
          sudo apt-get install -y python3 aria2 p7zip-full unzip bc openjdk-19-jre-headless
          sudo bash "$GITHUB_WORKSPACE"/tools/install_rclone.sh ${{ secrets.GH_TOKEN }}
          mkdir -p ~/.config/rclone/
          unzip -o -q -P ${{ secrets.PASSWORD }} "$GITHUB_WORKSPACE"/tools/rclone_config.zip -d ~/.config/rclone/
          if [[ "$device" == "umi" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/OS1.0.5.0.TJBCNXM/miui_UMI_OS1.0.5.0.TJBCNXM_d01651ed86_13.0.zip
          elif [[ "$device" == "cmi" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/OS1.0.5.0.TJACNXM/miui_CMI_OS1.0.5.0.TJACNXM_64cdfa3fe5_13.0.zip
          elif [[ "$device" == "cas" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/OS1.0.4.0.TJJCNXM/miui_CAS_OS1.0.4.0.TJJCNXM_40f432b58e_13.0.zip
          elif [[ "$device" == "apollo" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/V14.0.5.0.SJDCNXM/miui_APOLLO_V14.0.5.0.SJDCNXM_e727f2446b_12.0.zip
          elif [[ "$device" == "thyme" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/OS1.0.4.0.TGACNXM/miui_THYME_OS1.0.4.0.TGACNXM_80dbab1cd4_13.0.zip
          elif [[ "$device" == "alioth" ]]; then
            ORIGIN_URL=https://hugeota.d.miui.com/OS1.0.6.0.TKHCNXM/miui_ALIOTH_OS1.0.6.0.TKHCNXM_101dfdb5be_13.0.zip
          fi
          ORIGIN_ZIP_NAME=$(echo $ORIGIN_URL | sed 's/.*\(miui_.*\.zip\).*/\1/')
          TARGET_ZIP_NAME=$(echo "$URL" | sed 's#.*/\([^/]*ota_full[^/]*\.zip\).*#\1#')
          rclone copy OneDrive:/MI_Packages/RubbishBin/BottomPackages/"$ORIGIN_ZIP_NAME" "$GITHUB_WORKSPACE"
          if [[ "$URL" == *PrePackages* ]]; then
            rclone copy OneDrive:/MI_Packages/RubbishBin/PrePackages/"$TARGET_ZIP_NAME" "$GITHUB_WORKSPACE"
          elif [[ "$URL" != "$ORIGIN_URL" ]]; then
            aria2c -x16 -j$(nproc) -U "Mozilla/5.0" -d "$GITHUB_WORKSPACE" "$URL"
          fi
        env:
          URL: ${{ inputs.URL }}
      - name: 下载 TWRP
        uses: robinraju/release-downloader@v1.9
        with:
            repository: zjw2017/TWRP_Backup
            tag: "twrp"
            fileName: "*${{ env.device }}*"
            out-file-path: "${{ env.device }}_files"
            token: ${{ secrets.GH_TOKEN }}
      - name: 自动构建
        run: |
          sudo bash build_local_HyperOS2.sh $URL $device $custom_version $VK $Dolby $data $pack_type $NFC_Version
          cat "$GITHUB_WORKSPACE"/PackageInfo.txt >> $GITHUB_ENV
        env:
          URL: ${{ inputs.URL }}
          custom_version: ${{ inputs.custom_version }}
          VK: ${{ inputs.VK }}
          Dolby: ${{ inputs.Dolby }}
          NFC_Version: ${{ inputs.NFC_Version }}
          data: ${{ inputs.data }}
          pack_type: ${{ inputs.pack_type }}
      - if: github.event.inputs.GithubRelease == 'true'
        name: 处理包
        run: |
          mkdir -p "$GITHUB_WORKSPACE"/GithubRelease
          cd "$GITHUB_WORKSPACE"/GithubRelease
          sudo split -b 1536M -d "$GITHUB_WORKSPACE"/zip/"$NEW_PACKAGE_NAME" "$NEW_PACKAGE_NAME"
          cd "$GITHUB_WORKSPACE"
          touch file.log
          echo "$NEW_PACKAGE_NAME" > file.log
      - if: github.event.inputs.GithubRelease == 'true'
        name: 上传到Github Release
        uses: ncipollo/release-action@main
        with:
          owner: Weverses
          repo: ActionBuildCasSystemT
          artifacts: ${{ github.workspace }}/GithubRelease/*
          name: "${{ inputs.custom_version }}"
          tag: "${{ inputs.custom_version }}"
          bodyFile: "${{ github.workspace }}/file.log"
          allowUpdates: true
          artifactErrorsFailBuild: true
          removeArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
      - if: ${{ github.event.inputs.OneDrive == 'true' }}
        name: 上传到OneDrive
        run: |
          rclone mkdir OneDrive:/MI_Packages/RubbishBin/DevPackages
          rclone copy -P ./zip/* OneDrive:/MI_Packages/RubbishBin/DevPackages --buffer-size=1024M
      - name: 发送 Onedrive 上传成功通知
        run: |
          if [[ "$device" == "umi" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10 '"$date"'已构建完成","content":" **小米10 '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "cmi" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10Pro '"$date"'已构建完成","content":" **小米10Pro '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "cas" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10 Ultra '"$date"'已构建完成","content":" **小米10 Ultra '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "apollo" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"红米K30S Ultra '"$date"'已构建完成","content":" **红米K30S Ultra '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "thyme" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"小米10S '"$date"'已构建完成","content":" **小米10S '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          elif [[ "$device" == "alioth" ]]; then
            curl -i -X POST -H 'Content-type':'application/json' -d '{"token":"${{ secrets.appToken }}","title":"红米K40 '"$date"'已构建完成","content":" **红米K40 '"$date"'已构建完成** \n \n **底包的 OS 版本：'"$bottom_os_date"'** \n \n **底包的 Android 安全更新版本：'"$bottom_security_patch"'** \n \n **底包的 Android 基线版本：'"$bottom_base_line"'** \n \n **移植包的 OS 版本：'"$target_os_date"'** \n \n **移植包的 Android 安全更新版本：'"$target_security_patch"'** \n \n **移植包的 Android 基线版本：'"$target_base_line"'** \n \n **包名：'"$NEW_PACKAGE_NAME"'** \n \n **MD5：'"$MD5"'** \n \n **下载地址为：[https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"'](https://onedrive.zjw.js.cn/RubbishBin/DevPackages/'"$NEW_PACKAGE_NAME"')** ","topic":"kona","template":"markdown"}' http://www.pushplus.plus/send || true
          fi
