name: Auto Pack

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '*/10 9-15 * * 5'  # 每周五 17:00 至 23:59 每 10 分钟执行一次 (UTC时间)
jobs:
  check-version-thor:
    runs-on: ubuntu-latest
    outputs:
      thor_result: ${{ steps.get_update.outputs.result }}
      thor_URL: ${{ steps.get_update.outputs.URL }}
    steps:
      - name: 检测更新
        id: get_update
        run: |
          wget https://raw.githubusercontent.com/zjw2017/TWRP_Backup/main/version.json
          URL=$(${{ secrets.THOR }})
          new_version=$(echo $URL | cut -d"/" -f4)
          previous_version=$(jq -r .thor $GITHUB_WORKSPACE/version.json)
          if [[ "$URL" == *"CNXM"* ]]; then
             URL="${URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          if [[ "$new_version" != "$previous_version" ]]; then
            echo "检测到新版本: $new_version"
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "已是最新版本: $previous_version"
            echo "result=false" >> $GITHUB_OUTPUT
          fi
          echo "URL=$URL" >> $GITHUB_OUTPUT
  check-version-ishtar:
    needs: check-version-thor
    runs-on: ubuntu-latest
    outputs:
      ishtar_result: ${{ steps.get_update.outputs.result }}
      ishtar_URL: ${{ steps.get_update.outputs.URL }}
    steps:
      - name: 检测更新
        id: get_update
        run: |
          wget https://raw.githubusercontent.com/zjw2017/TWRP_Backup/main/version.json
          URL=$(${{ secrets.ISHTAR }})
          new_version=$(echo $URL | cut -d"/" -f4)
          previous_version=$(jq -r .ishtar $GITHUB_WORKSPACE/version.json)
          if [[ "$URL" == *"CNXM"* ]]; then
             URL="${URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          if [[ "$new_version" != "$previous_version" ]]; then
            echo "检测到新版本: $new_version"
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "已是最新版本: $previous_version"
            echo "result=false" >> $GITHUB_OUTPUT
          fi
          echo "URL=$URL" >> $GITHUB_OUTPUT
  check-version-vermeer:
    needs: check-version-ishtar
    runs-on: ubuntu-latest
    outputs:
      vermeer_result: ${{ steps.get_update.outputs.result }}
      vermeer_URL: ${{ steps.get_update.outputs.URL }}
    steps:
      - name: 检测更新
        id: get_update
        run: |
          wget https://raw.githubusercontent.com/zjw2017/TWRP_Backup/main/version.json
          URL=$(${{ secrets.VERMEER }})
          new_version=$(echo $URL | cut -d"/" -f4)
          previous_version=$(jq -r .vermeer $GITHUB_WORKSPACE/version.json)
          if [[ "$URL" == *"CNXM"* ]]; then
             URL="${URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          if [[ "$new_version" != "$previous_version" ]]; then
            echo "检测到新版本: $new_version"
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "已是最新版本: $previous_version"
            echo "result=false" >> $GITHUB_OUTPUT
          fi
          echo "URL=$URL" >> $GITHUB_OUTPUT
  check-version-aurora:
    needs: check-version-vermeer
    runs-on: ubuntu-latest
    outputs:
      aurora_result: ${{ steps.get_update.outputs.result }}
      aurora_URL: ${{ steps.get_update.outputs.URL }}
    steps:
      - name: 检测更新
        id: get_update
        run: |
          wget https://raw.githubusercontent.com/zjw2017/TWRP_Backup/main/version.json
          URL=$(${{ secrets.AURORA }})
          new_version=$(echo $URL | cut -d"/" -f4)
          previous_version=$(jq -r .aurora $GITHUB_WORKSPACE/version.json)
          if [[ "$URL" == *"CNXM"* ]]; then
             URL="${URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          if [[ "$new_version" != "$previous_version" ]]; then
            echo "检测到新版本: $new_version"
            echo "result=true" >> $GITHUB_OUTPUT
          else
            echo "已是最新版本: $previous_version"
            echo "result=false" >> $GITHUB_OUTPUT
          fi
          echo "URL=$URL" >> $GITHUB_OUTPUT
  update_json:
    if: needs.check-version-thor.outputs.thor_result == 'true' || needs.check-version-ishtar.outputs.ishtar_result == 'true' || needs.check-version-vermeer.outputs.vermeer_result == 'true' || needs.check-version-aurora.outputs.aurora_result == 'true'
    needs: [check-version-thor, check-version-ishtar, check-version-vermeer, check-version-aurora]
    runs-on: ubuntu-latest
    steps:
      - name: 检出 version.json
        uses: actions/checkout@v4.2.2
        with:
          repository: zjw2017/TWRP_Backup
          token: ${{ secrets.GH_TOKEN }}
      - name: 更新 version.json
        run: |
          new_version_thor=$(echo "${{ needs.check-version-thor.outputs.thor_URL }}" | cut -d"/" -f4)
          new_version_ishtar=$(echo "${{ needs.check-version-ishtar.outputs.ishtar_URL }}" | cut -d"/" -f4)
          new_version_vermeer=$(echo "${{ needs.check-version-vermeer.outputs.vermeer_URL }}" | cut -d"/" -f4)
          new_version_aurora=$(echo "${{ needs.check-version-aurora.outputs.aurora_URL }}" | cut -d"/" -f4)
          jq --arg newversion1 "$new_version_thor" --arg newversion2 "$new_version_ishtar" --arg newversion3 "$new_version_vermeer" --arg newversion4 "$new_version_aurora" '.thor = $newversion1 | .ishtar = $newversion2 | .vermeer = $newversion3 | .aurora = $newversion4' version.json > temp.json && mv temp.json version.json
          git config --global user.email "30484319+zjw2017@users.noreply.github.com"
          git config --global user.name "柚稚的孩纸"
          touch commit.log
          echo "更新 version.json" >commit.log
          echo "" >>commit.log
          if [[ "${{ needs.check-version-thor.outputs.thor_result }}" == "true" ]]; then
            echo "同步 Xiaomi 12S Ultra ${new_version_thor}" >>commit.log
          fi
          if [[ "${{ needs.check-version-ishtar.outputs.ishtar_result }}" == "true" ]]; then
            echo "同步 Xiaomi 13 Ultra ${new_version_ishtar}" >>commit.log
          fi
          if [[ "${{ needs.check-version-vermeer.outputs.vermeer_result }}" == "true" ]]; then
            echo "同步 Redmi K70 ${new_version_vermeer}" >>commit.log
          fi
          if [[ "${{ needs.check-version-aurora.outputs.aurora_result }}" == "true" ]]; then
            echo "同步 Xiaomi 14 Ultra ${new_version_aurora}" >>commit.log
          fi
          git add ./version.json
          git commit -F commit.log
          git push
  build_kona:
    if: needs.check-version-thor.outputs.thor_result == 'true'
    runs-on: ubuntu-latest
    needs: check-version-thor
    steps:
      - name: 触发构建
        run: |
          URL="${{ needs.check-version-thor.outputs.thor_URL }}"
          new_version="$(echo $URL | cut -d"/" -f4)"
          curl -Ss -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/zjw2017/action_build_HyperOS/actions/workflows/Xiaomi%20HyperOS%20-%20kona.yml/dispatches \
            -d '{"ref":"main","inputs":{"build_matrix":"all","URL":"'"${URL}"'","custom_version":"'"${new_version}"'","VK":"true","data":"false","pack_type":"erofs","OneDrive":"true","GithubRelease":"false"}}'
  build_lahaina_ishtar:
    if: needs.check-version-ishtar.outputs.ishtar_result == 'true'
    runs-on: ubuntu-latest
    needs: check-version-ishtar
    steps:
      - name: 触发构建
        run: |
          URL="${{ needs.check-version-ishtar.outputs.ishtar_URL }}"
          custom_version="OS1.0.$(date +"%y.%-m.%-d").DEV"
          curl -Ss -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/zjw2017/action_build_HyperOS/actions/workflows/Xiaomi%20HyperOS%20-%20lahaina.yml/dispatches \
            -d '{"ref":"main","inputs":{"build_matrix":"all","URL":"'"${URL}"'","custom_version":"'"${custom_version}"'","OneDrive":"true","GithubRelease":"false"}}'
          curl -Ss -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/zjw2017/action_build_HyperOS/actions/workflows/Xiaomi%20HyperOS%20-%20kalama%20-%20ishtar.yml/dispatches \
            -d '{"ref":"main","inputs":{"build_matrix":"ishtar","ORIGIN_URL":"'"${URL}"'","custom_version":"'"${custom_version}"'","OneDrive":"true","GithubRelease":"false"}}'
  build_vermeer:
    if: needs.check-version-vermeer.outputs.vermeer_result == 'true' || needs.check-version-aurora.outputs.aurora_result == 'true'
    runs-on: ubuntu-latest
    needs: [check-version-vermeer, check-version-aurora]
    steps:
      - name: 触发构建
        run: |
          ORIGIN_URL="$(${{ secrets.VERMEER }})"
          URL="$(${{ secrets.AURORA }})"
          if [[ "$ORIGIN_URL" == *"CNXM"* ]]; then
             ORIGIN_URL="${ORIGIN_URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          if [[ "$URL" == *"CNXM"* ]]; then
             URL="${URL/http:\/\/cdnorg.d.miui.com/https:\/\/bkt-sgp-miui-ota-update-alisgp.oss-ap-southeast-1.aliyuncs.com}"
          fi
          new_version_vermeer="$(echo $ORIGIN_URL | cut -d"/" -f4)"
          new_version_aurora="$(echo $URL | cut -d"/" -f4)"
          Version="$(echo $new_version_vermeer | cut -d"." -f3)"
          PatchLevel="$(echo $new_version_aurora | cut -d"." -f3)"
          custom_version="OS1.0.$Version.$PatchLevel.UNKCNXM"
          curl -Ss -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/zjw2017/action_build_HyperOS/actions/workflows/Xiaomi%20HyperOS%20-%20kalama.yml/dispatches \
            -d '{"ref":"main","inputs":{"build_matrix":"vermeer","ORIGIN_URL":"'"${ORIGIN_URL}"'","URL":"'"${URL}"'","custom_version":"'"${custom_version}"'","OneDrive":"true","GithubRelease":"false"}}'
